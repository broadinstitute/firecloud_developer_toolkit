

# for setting things up from a bare debian 7bp GCE image, ie 
# --image backports-debian-7-wheezy-v20160531 --image-project debian-cloud
# this is the one used by Firecloud as of March 2017.
# Old, minimal version of Python 2.7 already installed, along with an old version of gsutil.
# note that some of these commands modify ~/.bashrc, and so may need a tweak to work for other users.
# in particular: fdtsetroot, firecloudcli, docker, gcloud init, editing the .boto file.

sudo apt-get install -y git

cd /opt
git clone https://github.com/broadinstitute/firecloud_developer_toolkit.git /opt/fdt
cd /opt/fdt
#edit path and user's .bashrc
. fdtsetroot -s   

cd 

sudo apt-get update
sudo apt-get upgrade -y

set_timezone_ET.sh

#base gsutil already installed in gce image, so just update it and add alpha component
sudo update_gsutil_latest_nr.sh
sudo gcloud components install alpha -q

#stackdriver install has some failures? may need to move later?
install_stackdriver.sh

install_oraclejavajdk_8_debian7bp.sh
install_python_2.7.sh
install_utils.sh
install_docker_latest_debian7bp.sh #sets docker unix group membership, needs relogin before it takes effect


install_cromwell_25_nr.sh 
install_firecloudcli_latest_nr.sh 
install_fissfc_latest.sh  


#######
# below this point, you probably do not want to run stuff for a disk that will be imaged
#######

# stores authorization tokens to home directory in ~/.boto. Don't leave this on an image!
gcloud init
# in gcloud init, set oath, set zone (east-b?).  
# Also, a cert will be made on first usage of the credentials from your local node.
# And, a fingerprint will be stored for each new GCE host you log into.
# make sure the cert is set up _before_ creating your first vm, eg via executing a gsutil ls command.

# Set application-default if using fissfc  
gcloud auth application-default login 

sudo gpasswd -a ${USER} docker  # add yourself to the docker unix group, needed for crom to work.  Requires relogin to take effect.
<logout and back in again>
docker login


# if you will be calling gsutil manually, uncomment the following lines of the ~/.boto file
# also... change the "parallel_composite_upload_threshold" and "sliced_object_download_threshold"
# fields from '0' to '100M'
# "parallel_process_count" will be something around the number of cores, but does not seem to 
# matter if it is >3 when working with normal disks.
#software_update_check_period = 30
#parallel_process_count = 2
#parallel_thread_count = 5
#parallel_composite_upload_threshold = 0
#parallel_composite_upload_component_size = 50M
#sliced_object_download_threshold = 0
#sliced_object_download_component_size = 50M
#sliced_object_download_max_components = 4 


# ----
# load your project
cd /opt
git clone https://github.com/broadinstitute/rebcwgs.git
cd /opt/rebcwgs/tasks/

